<library path="lib/libontologenius_reasoner_plugin">
  <class type="ontologenius::ReasonerNone" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner test plugin.</description>
  </class>
  <class type="ontologenius::ReasonerInverseOf" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner for inverse of axiom.</description>
  </class>
  <class type="ontologenius::ReasonerSymmetric" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner for symmetric axiom.</description>
  </class>
  <class type="ontologenius::ReasonerChain" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner for properties chain axiom.</description>
  </class>
  <class type="ontologenius::ReasonerDictionary" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner for expand dictionaries.</description>
  </class>
  <class type="ontologenius::ReasonerGeneralize" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner to deduce new knowledge.</description>
  </class>
  <class type="ontologenius::ReasonerRangeDomain" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner to deduce new inheritances based on range and domain of properties.</description>
  </class>
  <class type="ontologenius::ReasonerAnonymous" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner for equivalent classes.</description>
  </class>
  <class type="ontologenius::ReasonerTransitivity" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner for transitive axioms.</description>
  </class>
  <class type="ontologenius::ReasonerRule" base_class_type="ontologenius::ReasonerInterface">
    <description>This is a reasoner for SWRL rules.</description>
  </class>
</library>
